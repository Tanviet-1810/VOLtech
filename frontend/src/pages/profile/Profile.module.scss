@use '../../styles/vars.scss' as *;

.profileSection {
	background-color: var(--app-background);
	min-height: 80vh;
	padding: 2rem 0;
}

.profileContainer {
	max-width: 800px;
	margin: 0 auto;
	display: flex;
	flex-direction: column;
	gap: 2rem;

	@media (max-width: $app-tablet) {
		max-width: 100%;
		gap: 1.5rem;
	}
}

.profileContent {
	display: flex;
	flex-direction: column;
	gap: 1.5rem;
}

.profileHeader {
	background: var(--color-white);
	border-radius: var(--border-radius-xl);
	padding: 2rem;
	box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.08);
	border: 0.0625rem solid var(--border-lightgray);

	@media (max-width: $app-mobile) {
		padding: 1.5rem;
		border-radius: var(--border-radius-lg);
	}
}

.avatarSection {
	display: flex;
	align-items: center;
	gap: 1.5rem;

	@media (max-width: $app-mobile) {
		flex-direction: column;
		text-align: center;
		gap: 1rem;
	}
}

.avatar {
	width: 5rem;
	height: 5rem;
	border-radius: 50%;
	object-fit: cover;
	border: 0.1875rem solid var(--color-accent);
	box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
	transition: transform 0.3s ease, box-shadow 0.3s ease;

	&:hover {
		transform: scale(1.05);
		box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15);
	}

	@media (max-width: $app-mobile) {
		width: 4rem;
		height: 4rem;
	}
}

.userBasicInfo {
	flex: 1;
}

.userName {
	font-size: 1.75rem;
	font-weight: var(--font-semibold);
	color: var(--txt-primary);
	margin: 0 0 0.25rem 0;

	@media (max-width: $app-mobile) {
		font-size: 1.5rem;
	}
}

.userRole {
	font-size: 0.875rem;
	color: var(--txt-secondary);
	margin: 0;
	text-transform: uppercase;
	letter-spacing: 0.05em;
}

.profileContent {
	display: flex;
	flex-direction: column;
	gap: 1.5rem;
}

.infoCard {
	background: var(--color-white);
	border-radius: var(--border-radius-xl);
	padding: 2rem;
	box-shadow: 0 0.25rem 1rem rgba(0, 0, 0, 0.08);
	border: 0.0625rem solid var(--border-lightgray);

	@media (max-width: $app-mobile) {
		padding: 1.5rem;
		border-radius: var(--border-radius-lg);
	}
}

.cardTitle {
	font-size: 1.25rem;
	font-weight: var(--font-semibold);
	color: var(--txt-primary);
	margin: 0 0 1.5rem 0;
	padding-bottom: 0.75rem;
	border-bottom: 0.0625rem solid var(--border-lightgray);
}

.infoGrid {
	display: grid;
	gap: 1.25rem;

	@media (min-width: $app-tablet) {
		grid-template-columns: 1fr 1fr;
	}
}

.infoItem {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	padding: 1rem;
	background: var(--app-background);
	border-radius: var(--border-radius-base);
	border: 0.0625rem solid var(--border-lightgray);
	transition: all 0.2s ease;

	&:hover {
		border-color: var(--color-accent);
		box-shadow: 0 0.125rem 0.5rem rgba(255, 165, 54, 0.1);
	}
}

.label {
	font-size: 0.75rem;
	font-weight: var(--font-medium);
	color: var(--txt-secondary);
	text-transform: uppercase;
	letter-spacing: 0.05em;
}

.value {
	font-size: 0.9375rem;
	font-weight: var(--font-medium);
	color: var(--txt-primary);
	word-break: break-word;
}

.actions {
	display: flex;
	gap: 1rem;
	justify-content: flex-end;
	align-items: center;

	@media (max-width: $app-mobile) {
		flex-direction: column-reverse;
		gap: 0.75rem;
	}
}

.editBtn,
.logoutBtn {
	min-width: 10rem;

	@media (max-width: $app-mobile) {
		width: 100%;
	}
}

.errorMessage {
	background: var(--notice-error);
	color: var(--txt-white);
	padding: 0.75rem 1rem;
	border-radius: var(--border-radius-base);
	font-size: 0.875rem;
	text-align: center;
	box-shadow: 0 0.25rem 0.75rem rgba(220, 53, 69, 0.2);
}

.logoutOverlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: rgba(27, 60, 83, 0.8);
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	color: var(--txt-white);
	font-size: 1.125rem;
	text-align: center;
	opacity: 0;
	pointer-events: none;
	transition: opacity 0.3s ease;
	z-index: 9999;
	backdrop-filter: blur(4px);

	&.active {
		opacity: 1;
		pointer-events: auto;
	}

	p {
		margin: 1rem 0 0 0;
		font-weight: var(--font-medium);
	}
}

.spinner {
	width: 2rem;
	height: 2rem;
	border: 0.1875rem solid rgba(255, 255, 255, 0.3);
	border-radius: 50%;
	border-top-color: var(--color-accent);
	animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

.fadeIn {
	animation: fadeIn 0.5s ease forwards;
}

.fadeOut {
	animation: fadeOut 0.5s ease forwards;
}

@keyframes fadeIn {
	from {
		opacity: 0;
		transform: translateY(1rem);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes fadeOut {
	from {
		opacity: 1;
		transform: translateY(0);
	}
	to {
		opacity: 0;
		transform: translateY(-1rem);
	}
}
